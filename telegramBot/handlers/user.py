
import config

from main import dp, bot
from state.default_state import *
from keyboards.kb import *

import requests

import aiogram.utils.markdown as md
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ParseMode
from aiogram.utils import executor

@dp.message_handler(text="/start")
async def start(message: types.Message, state: FSMContext):
    text = f"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, <code>{message.from_user.first_name}</code> –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –≤ —á–∞—Ç-–±–æ—Ç–µ –≥–æ—Å–ø–∏—Ç–∞–ª—è\n<b>¬´MD HELPER¬ª!</b>\n\n–î–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å —Ä–∞–∑–¥–µ–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá\n\nüëÅ –ï—Å–ª–∏ –≤—ã –Ω–µ –≤–∏–¥–∏—Ç–µ –≤–Ω–∏–∑—É –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç —Å 4-–º—è —Ç–æ—á–∫–∞–º –ø—Ä–∞–≤–µ–µ –æ–∫–Ω–∞ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π. ‚úâ"
    await message.answer_photo(photo="https://thumbs.dreamstime.com/b/%D0%B7%D0%B5-%D0%B5%D0%BD%D0%B0%D1%8F-%D0%B1%D0%BE-%D1%8C%D0%BD%D0%B8%D1%86%D0%B0-%D0%B2-%D0%B0%D0%B1%D1%83-%D0%B4%D0%B0%D0%B1%D0%B8-82730118.jpg",
                               caption=text,
                               reply_markup=mainkb(message.from_user.id))

@dp.message_handler(text="‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
async def info(message: types.Message, state: FSMContext):
    text = f"""
<b>–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –±—é–¥–∂–µ—Ç–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µ ¬´–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª—å–Ω–∏—Ü–∞ ‚Ññ4 –≥. –ì—Ä–æ–∑–Ω–æ–≥–æ¬ª.</b>

–ê–¥—Ä–µ—Å: <code>–°–æ—Ü–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —É–ª., 4, –ì—Ä–æ–∑–Ω—ã–π, –ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø., 364030</code>

–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: 
<code>—Å—É–±–±–æ—Ç–∞	–ó–∞–∫—Ä—ã—Ç–æ
–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ	–ó–∞–∫—Ä—ã—Ç–æ
–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫	09:00‚Äì18:00
–≤—Ç–æ—Ä–Ω–∏–∫	09:00‚Äì18:00
—Å—Ä–µ–¥–∞	09:00‚Äì18:00
—á–µ—Ç–≤–µ—Ä–≥	09:00‚Äì18:00
–ø—è—Ç–Ω–∏—Ü–∞	09:00‚Äì18:00</code>

–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: <code>8 (871) 222-22-47</code>
"""
    await message.answer_photo(photo="https://i.pinimg.com/564x/ca/a5/1b/caa51b565cb636d5c312a835dfbc1655.jpg",
                               caption=text,
                               reply_markup=mainkb(message.from_user.id))

@dp.message_handler(text="üìó –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def statistic(message: types.Message, state: FSMContext):
    try:
        response = requests.get(config.BACKEND_URL + "/auth/statistic").json()
        text = f"""
–í—Å–µ–≥–æ –≤—Ä–∞—á–µ–π ‚Äî‚Äî <code>{response["doctors"]}</code>
–í—Å–µ–≥–æ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ ‚Äî‚Äî <code>{response["patients"]}</code>
–í—Å–µ–≥–æ –æ—Ç—á–µ—Ç–æ–≤ ‚Äî‚Äî <code>{response["actions"]}</code>

–ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –¢–µ—Ä–∞–ø–∏–∏ ‚Äî‚Äî <code>{response["therapy"]}</code>
–ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –ö–∞—Ä–¥–∏–æ–ª–æ–≥–∏–∏ ‚Äî‚Äî <code>{response["cardiology"]}</code>
–ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –ù–µ—Ä–≤–æ–ª–æ–≥–∏—è ‚Äî‚Äî <code>{response["neurology"]}</code>
–ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –•–∏—Ä—É—Ä–≥–∏–∏ ‚Äî‚Äî <code>{response["surgical"]}</code>
–ü–∞—Ü–∏–µ–Ω—Ç–æ–≤ –≤ –≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æ–≥–∏–∏ ‚Äî‚Äî <code>{response["endocrinology"]}</code>
"""
        await message.answer_photo(photo="https://i.pinimg.com/564x/e0/a0/9a/e0a09ad65424251fff4b5a4b2243bf34.jpg",
                                caption=text,
                                reply_markup=mainkb(message.from_user.id))
    except Exception as ex: await message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))

@dp.message_handler(text="üñ• –û—Ç–¥–µ–ª–µ–Ω–∏—è")
async def otdel(message: types.Message, state: FSMContext):
    await message.answer_photo(
        photo="https://i.pinimg.com/564x/16/31/df/1631df84620572e643faca266bca8787.jpg",
        caption="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ:",
        reply_markup=department(),
    )


@dp.callback_query_handler(text_startswith="endocrinology", state="*")
async def endocrinology(call: types.CallbackQuery, state: FSMContext):
    try:
        await call.message.delete()
        response = requests.get(config.BACKEND_URL + config.URLS["endocrinology"]).json()
        if response:
            text = "<code>–≠–Ω–¥–æ–∫—Ä–∏–Ω–æ–ª–æÃÅ–≥–∏—è ‚Äî –Ω–∞—É–∫–∞ –æ —Å—Ç—Ä–æ–µ–Ω–∏–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∂–µ–ª—ë–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–µ–∫—Ä–µ—Ü–∏–∏, –≤—ã—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö –∏–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö, –æ –ø—É—Ç—è—Ö –∏—Ö –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ –æ—Ä–≥–∞–Ω–∏–∑–º –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —á–µ–ª–æ–≤–µ–∫–∞; –∞ —Ç–∞–∫–∂–µ –æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è—Ö, –≤—ã–∑–≤–∞–Ω–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —ç—Ç–∏—Ö –∂–µ–ª—ë–∑ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏ —ç—Ç–∏—Ö –≥–æ—Ä–º–æ–Ω–æ–≤.</code>\n\n"
            for data in response:
                text += f"ID: <code>{data['id']}</code> ; <b>{data['first_name']} {data['last_name']} {data['patronymic']}</b>\n"
            inline_kb_full = types.InlineKeyboardMarkup()
            inline_kb_full.row(types.InlineKeyboardButton("‚öô –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –ø–∞—Ü–∏–µ–Ω—Ç–µ", callback_data=f"find"))
            await call.message.answer_photo(photo="https://i.pinimg.com/564x/36/67/f1/3667f10628d1aa579bb8d4f39fd7928f.jpg",
                                            caption=text,
                                            reply_markup=inline_kb_full)
        else:
            await call.answer("‚ùå –ü—É—Å—Ç–æ, –ª—é–¥–µ–π –≤ –¥–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ –Ω–µ—Ç")
    except Exception as ex: await call.message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))

@dp.callback_query_handler(text_startswith="therapy", state="*")
async def therapy(call: types.CallbackQuery, state: FSMContext):
    try:
        await call.message.delete()
        response = requests.get(config.BACKEND_URL + config.URLS["therapy"]).json()
        if response:
            text = "<code>–ø—Ä–æ—Ü–µ—Å—Å, —Ü–µ–ª—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è–µ—Ç—Å—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏–ª–∏ —Ç—Ä–∞–≤–º—ã, –ø–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–ª–∏ –∏–Ω–æ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∂–∏–∑–Ω–µ–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Ä—É—à–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∂–∏–∑–Ω–µ–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–ª—É—á—à–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è.</code>\n\n"
            for data in response:
                text += f"ID: <code>{data['id']}</code> ; <b>{data['first_name']} {data['last_name']} {data['patronymic']}</b>\n"
            inline_kb_full = types.InlineKeyboardMarkup()
            inline_kb_full.row(types.InlineKeyboardButton("‚öô –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –ø–∞—Ü–∏–µ–Ω—Ç–µ", callback_data=f"find"))
            await call.message.answer_photo(photo="https://i.pinimg.com/564x/36/67/f1/3667f10628d1aa579bb8d4f39fd7928f.jpg",
                                            caption=text,
                                            reply_markup=inline_kb_full)
        else:
            await call.answer("‚ùå –ü—É—Å—Ç–æ, –ª—é–¥–µ–π –≤ –¥–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ –Ω–µ—Ç")
    except Exception as ex: await call.message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))

@dp.callback_query_handler(text_startswith="cardiology", state="*")
async def cardiology(call: types.CallbackQuery, state: FSMContext):
    try:
        await call.message.delete()
        response = requests.get(config.BACKEND_URL + config.URLS["cardiology"]).json()
        if response:
            text = "<code>–ö–∞—Ä–¥–∏–æ–ª–æÃÅ–≥–∏—è ‚Äî –æ–±—à–∏—Ä–Ω—ã–π —Ä–∞–∑–¥–µ–ª –º–µ–¥–∏—Ü–∏–Ω—ã, –∑–∞–Ω–∏–º–∞—é—â–∏–π—Å—è –∏–∑—É—á–µ–Ω–∏–µ–º —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã —á–µ–ª–æ–≤–µ–∫–∞: —Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —Ä–∞–∑–≤–∏—Ç–∏—è —Å–µ—Ä–¥—Ü–∞ –∏ —Å–æ—Å—É–¥–æ–≤, –∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, –∞ —Ç–∞–∫–∂–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π, –≤–∫–ª—é—á–∞—è –∏–∑—É—á–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω –∏—Ö –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è, –º–µ—Ö–∞–Ω–∏–∑–º–æ–≤ —Ä–∞–∑–≤–∏—Ç–∏—è, –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏–π, –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏, –∞ —Ç–∞–∫–∂–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤</code>\n\n"
            for data in response:
                text += f"ID: <code>{data['id']}</code> ; <b>{data['first_name']} {data['last_name']} {data['patronymic']}</b>\n"
            inline_kb_full = types.InlineKeyboardMarkup()
            inline_kb_full.row(types.InlineKeyboardButton("‚öô –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –ø–∞—Ü–∏–µ–Ω—Ç–µ", callback_data=f"find"))
            await call.message.answer_photo(photo="https://i.pinimg.com/564x/36/67/f1/3667f10628d1aa579bb8d4f39fd7928f.jpg",
                                            caption=text,
                                            reply_markup=inline_kb_full)
        else:
            await call.answer("‚ùå –ü—É—Å—Ç–æ, –ª—é–¥–µ–π –≤ –¥–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ –Ω–µ—Ç")
    except Exception as ex: await call.message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))

@dp.callback_query_handler(text_startswith="neurology", state="*")
async def neurology(call: types.CallbackQuery, state: FSMContext):
    try:
        await call.message.delete()
        response = requests.get(config.BACKEND_URL + config.URLS["neurology"]).json()
        if response:
            text = "<code>–≥—Ä—É–ø–ø–∞ –º–µ–¥–∏–∫–æ-–±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –Ω–∞—É—á–Ω—ã—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω, –∫–æ—Ç–æ—Ä–∞—è –∏–∑—É—á–∞–µ—Ç –Ω–µ—Ä–≤–Ω—É—é —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ –≤ –Ω–æ—Ä–º–µ, —Ç–∞–∫ –∏ –≤ –ø–∞—Ç–æ–ª–æ–≥–∏–∏[1]. –ó–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å–∞–º–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –∏ –ø–µ—Ä–∏—Ñ–µ—Ä–∏—á–µ—Å–∫–æ–π —á–∞—Å—Ç–µ–π –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –∞ —Ç–∞–∫–∂–µ –∏–∑—É—á–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º—ã –∏—Ö —Ä–∞–∑–≤–∏—Ç–∏—è, —Å–∏–º–ø—Ç–æ–º–∞—Ç–∏–∫—É –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏, –ª–µ—á–µ–Ω–∏—è –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∏[2].</code>\n\n"
            for data in response:
                text += f"ID: <code>{data['id']}</code> ; <b>{data['first_name']} {data['last_name']} {data['patronymic']}</b>\n"
            inline_kb_full = types.InlineKeyboardMarkup()
            inline_kb_full.row(types.InlineKeyboardButton("‚öô –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –ø–∞—Ü–∏–µ–Ω—Ç–µ", callback_data=f"find"))
            await call.message.answer_photo(photo="https://i.pinimg.com/564x/36/67/f1/3667f10628d1aa579bb8d4f39fd7928f.jpg",
                                            caption=text,
                                            reply_markup=inline_kb_full)
        else:
            await call.answer("‚ùå –ü—É—Å—Ç–æ, –ª—é–¥–µ–π –≤ –¥–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ –Ω–µ—Ç")
    except Exception as ex: await call.message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))

@dp.callback_query_handler(text_startswith="surgical", state="*")
async def surgical(call: types.CallbackQuery, state: FSMContext):
    try:
        await call.message.delete()
        response = requests.get(config.BACKEND_URL + config.URLS["surgical"]).json()
        if response:
            text = "<code>–æ–±–ª–∞—Å—Ç—å –º–µ–¥–∏—Ü–∏–Ω—ã, –∏–∑—É—á–∞—é—â–∞—è –æ—Å—Ç—Ä—ã–µ –∏ —Ö—Ä–æ–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ª–µ—á–∞—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ (—Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–≥–æ) –º–µ—Ç–æ–¥–∞[1].</code>\n\n"
            for data in response:
                text += f"ID: <code>{data['id']}</code> ; <b>{data['first_name']} {data['last_name']} {data['patronymic']}</b>\n"
            inline_kb_full = types.InlineKeyboardMarkup()
            inline_kb_full.row(types.InlineKeyboardButton("‚öô –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –ø–∞—Ü–∏–µ–Ω—Ç–µ", callback_data=f"find"))
            await call.message.answer_photo(photo="https://i.pinimg.com/564x/36/67/f1/3667f10628d1aa579bb8d4f39fd7928f.jpg",
                                            caption=text,
                                            reply_markup=inline_kb_full)
        else:
            await call.answer("‚ùå –ü—É—Å—Ç–æ, –ª—é–¥–µ–π –≤ –¥–∞–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ–Ω–∏–∏ –Ω–µ—Ç")
    except Exception as ex: await call.message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))


@dp.callback_query_handler(text_startswith="find", state="*")
async def find(call: types.CallbackQuery, state: FSMContext):
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ü–∏–µ–Ω—Ç–∞—Ö:\n\n1. ID\n2. –ú–µ–¥. –ü–æ–ª–∏—Å")
    await call.message.delete()
    await FindState.q.set()

@dp.message_handler(text="üîç –ü–æ–∏—Å–∫", state="*")
async def qstate(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞—Ü–∏–µ–Ω—Ç–∞—Ö:\n\n1. ID\n2. –ú–µ–¥. –ü–æ–ª–∏—Å")
    await message.delete()
    await FindState.q.set()

@dp.message_handler(state=FindState.q)
async def qstate(message: types.Message, state: FSMContext):
    try:
        response = requests.get(config.BACKEND_URL + f"/auth/patients/{message.text}/medical/").json()
        if response:
            text = f"ID: <b>{response['id']}</b>\n\n–§–ò–û: <code>{response['first_name']} {response['last_name']} {response['patronymic']}</code>\n\n–°–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞: <code>{response['series']}</code>\n–ú–µ–¥. –ü–æ–ª–∏—Å: <code>{response['medical_number']}</code>\n\n–ü–∞–ª–∞—Ç–∞: <code>{response['chamber']}</code>\n–û—Ç–¥–µ–ª–µ–Ω–∏–µ: <code>{response['branch']}</code>"
            await message.answer_photo(photo="https://ichef.bbci.co.uk/news/640/cpsprodpb/151DF/production/_102759468_gettyimages-818784450.jpg",
                                       caption=text)
        else: message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏")
    except Exception as ex: await message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + str(ex))
    await state.finish()
