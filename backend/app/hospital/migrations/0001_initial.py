# Generated by Django 4.1.1 on 2022-09-27 15:56

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254)),
                ('username', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('patronymic', models.CharField(max_length=40, verbose_name='Отчество')),
                ('series', models.CharField(max_length=500, verbose_name='Cерия и Номер Паспорта')),
                ('medical_number', models.CharField(max_length=500, verbose_name='Номер Мед. Полиса')),
                ('branch', models.CharField(choices=[('Не выбрано', 'Не выбрано'), ('Терапия', 'Терапия'), ('Кардиология', 'Кардиология'), ('Неврология', 'Неврология'), ('Хирургическая', 'Хирургическая'), ('Эндокринология', 'Эндокринология')], max_length=50, verbose_name='Отделение')),
                ('last_create', models.DateTimeField(auto_now_add=True, verbose_name='Последняя время добавления')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлен в')),
                ('chamber', models.PositiveIntegerField(blank=True, null=True, verbose_name='Палата')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='doctor', to=settings.AUTH_USER_MODEL, verbose_name='Добавил')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=40)),
                ('visit_time', models.CharField(max_length=40)),
                ('create_time', models.DateField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('solution', models.BooleanField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hospital.patient')),
            ],
        ),
        migrations.CreateModel(
            name='userProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ActionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.TextField(verbose_name='Действие')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Добавлен')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.patient', verbose_name='Пациент')),
            ],
        ),
    ]
